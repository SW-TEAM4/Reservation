<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.team4.model.mapper.LodgmentMapper">
    <resultMap id="RoomResultMap" type="kr.co.team4.model.dto.RoomDTO">
        <id property="room_idx" column="room_idx"/>
        <result property="lod_idx" column="lod_idx"/>
        <result property="room_name" column="room_name"/>
        <result property="room_notice" column="room_notice"/>
        <result property="room_price" column="room_price"/>
        <result property="max_people_cnt" column="max_people_cnt"/>
        <result property="max_pet_cnt" column="max_pet_cnt"/>
        <result property="avg_rating" column="avg_rating"/>
        <result property="number_of_review" column="number_of_review"/>
        <result property="created" column="created"/>
        <result property="updated" column="updated"/>
        <result property="status" column="status"/>

        <!-- 이미지 URL 리스트 매핑 -->
        <collection property="room_img_urls" ofType="java.lang.String">
            <id column="room_photo_url"/>
            <result column="room_photo_url"/>
        </collection>
    </resultMap>

    <select id="lodgmentDetail" parameterType="kr.co.team4.model.dto.LodgmentDTO" resultType="kr.co.team4.model.dto.LodgmentDTO">
        SELECT
           *
        FROM LODGMENT
        WHERE lod_idx = #{lod_idx};
    </select>

    <!-- 판매자 정보 조회 -->
    <select id="getSellerInfo" parameterType="int" resultType="kr.co.team4.model.dto.SellerDTO">
        SELECT
            s.SELLER_IDX,
            s.SELLER_ID,
            s.SELLER_PWD,
            s.SELLER_NAME,
            s.SELLER_NICK_NAME,
            s.SELLER_EMAIL,
            s.SELLER_PHONE_NUMBER
        FROM SELLER s, LODGMENT l
        WHERE s.SELLER_IDX = l.SELLER_IDX
        AND l.LOD_IDX = #{lod_idx};
    </select>

    <select id="getAvailableRooms" parameterType="map" resultMap="RoomResultMap">
        WITH RECURSIVE DateSeries AS (
                                 SELECT #{checkinDate} AS stay_date
                                 UNION ALL
                                 SELECT DATE_ADD(stay_date, INTERVAL 1 DAY)
                                 FROM DateSeries
                                 WHERE stay_date &lt; #{checkoutDate}
                                     ),
                      SinglePhoto AS (
                                SELECT room_idx, lod_idx, MIN(ROOM_PHOTO_URL) AS ROOM_PHOTO_URL
                                FROM PHOTO
                                GROUP BY room_idx, lod_idx
                                      )
        SELECT
        r.room_idx,
        r.lod_idx,
        r.room_name,
        r.room_notice,
        r.max_people_cnt,
        r.max_pet_cnt,
        r.avg_rating,
        r.number_of_review,
        r.created,
        r.updated,
        r.status,
        sp.ROOM_PHOTO_URL,
        FLOOR(SUM(CASE
                  WHEN DAYOFWEEK(d.stay_date) IN (6, 7, 1) THEN -- 금/토/일 요금 계산
                  CASE
                  WHEN (pr.hpeak_str_dt IS NOT NULL AND d.stay_date BETWEEN pr.hpeak_str_dt AND pr.hpeak_end_dt) THEN r.room_price * 1.50 -- 극성수기 금/토/일
                  WHEN (pr.peak_str_dt IS NOT NULL AND d.stay_date BETWEEN pr.peak_str_dt AND pr.peak_end_dt) THEN r.room_price * 1.30 -- 성수기 금/토/일
                  WHEN pr.hpeak_str_dt IS NULL AND pr.peak_str_dt IS NULL THEN r.room_price * 1.10 -- 비수기 금/토/일 (기본값)
                  ELSE r.room_price * 1.10 -- 비수기 금/토/일
                  END
                  ELSE -- 평일 요금 계산 (월~목)
                  CASE
                  WHEN (pr.hpeak_str_dt IS NOT NULL AND d.stay_date BETWEEN pr.hpeak_str_dt AND pr.hpeak_end_dt) THEN r.room_price * 1.40 -- 극성수기 평일
                  WHEN (pr.peak_str_dt IS NOT NULL AND d.stay_date BETWEEN pr.peak_str_dt AND pr.peak_end_dt) THEN r.room_price * 1.20 -- 성수기 평일
                  WHEN pr.hpeak_str_dt IS NULL AND pr.peak_str_dt IS NULL THEN r.room_price * 1.00 -- 비수기 평일 (기본값)
                  ELSE r.room_price * 1.00 -- 비수기 평일
                  END
                  END)) AS room_price
        FROM ROOM r
                  LEFT JOIN SinglePhoto sp
                  ON sp.room_idx = r.room_idx
                  AND sp.lod_idx = r.lod_idx
                  LEFT JOIN PRICE pr
                  ON pr.lod_idx = r.lod_idx -- LEFT JOIN 사용해 NULL도 허용
                  JOIN DateSeries d ON d.stay_date >= #{checkinDate} AND d.stay_date &lt; #{checkoutDate}
                  WHERE r.lod_idx = #{lod_idx} -- 특정 숙소 필터링 추가
        AND NOT EXISTS (
                        SELECT 1 FROM RESERVATION res2
                        WHERE res2.room_idx = r.room_idx
                        AND res2.lod_idx = r.lod_idx
                        AND res2.res_end_date > #{checkinDate} AND res2.res_str_date &lt; #{checkoutDate}
                        )
        GROUP BY
        r.room_idx, r.lod_idx, r.room_name, r.room_notice, r.max_people_cnt,
        r.max_pet_cnt, r.avg_rating, r.number_of_review, r.created,
        r.updated, r.status, sp.ROOM_PHOTO_URL;
    </select>
</mapper>